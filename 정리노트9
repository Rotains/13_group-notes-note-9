우리는 지금까지 비주얼 스튜디오에 데이터를 입출력하기만 했잖아 파일에는 데이터 입출력을 하지 못해?
그러게 한 번 고민해보자!
C언어는 파일 입출력 함수를 표준 라이브러리 함술 제공하기 때문에 가능하지 않을까??
그럼 한 번 직접 코딩 해보자!!

중요한 것이 있어! 파일 포인트를 알고 가자!
그게 뭔데??
FILE은 파일 관련 작업을 위해 시스템 라이브러리에 만들어진 구조체야! 
이 구조체에는 파일명과 파일의 크기, 파일의 끝 등 파일 관련 정보를 포함하여 있기 때문에 파일 포인터(FILE*)로 작업을 처리해야해.

파일을 여는 방법!

FILE *fp;
fp = fopen("input.txt", "r");

파일에 데이터를 입출력하려면 파일을 반드시 열어야 겠지?
이때 우리는 fopen()함수를 이용하고, fopen()함수는 인자 2개를 받아.
왜 인자를 두 개나 받아?
인자1은 파일명으로 경로를 포함하고 인자2는 파일모드를 나타내서 쓰기나 읽기를 결정하는 거지

여기서 FILE 포인터는 파일의 시작부분이나 마지막 부분을 가리키는데, 추가로 쓰는 경우를 제외하고는 보통 파일의 시작 위치를 가르켜
그런데 파일이 제대로 열리지 않아서 Null이 저장되었는데 이게 값이야?
아니 Null은 아무 값도 가지고 있지 않아 숫자 0하고는 달라 숫자 0은 0이라는 값이 있는 거야.

파일을 닫는 방법!

FILE *fp;
⋮
fclose(fp);

파일을 열고 작업을 마쳤으면 파일을 닫아야 겠지? 만약 파일을 닫지 않고 종료하면 출력 파일의 일부분이 손상되어서 저장이 안될 수 가 있어
그래서 파일을 닫을 때는 fclose()함수를 사용하면 돼. fclose()함수는 닫으려는 파일의 FILE 포인터를 인자로 사용한 것도 기억해!

그러면 파일에서 데이터를 문자 하나 단위로 FILE 포인터가 가리키는 위치에서부터 읽거나 쓰려면 어떡해야해?
그럴 때는 fgetc()와 fputc() 함수를 사용하면 돼
그게 뭔데?
fgetc() 함수는 파일에서 문자 하나를 읽어오고, fputs() 함수는 파일에 문자 하나를 기록하지.

문자를 파일에 출력해보자

#include <stdio.h>
#include <stdlib.h>
 
int main(void)
{
 FILE* fp;
 char ch;

 if((fp = fopen("basic.txt", "w")) == NULL)
 {
 printf("파일이 열리지 않습니다.\n");
 exit(1);
 }

 printf("문자 하나를 입력하세요.\n");
 ch = getchar( );

 while(ch != 'q')
 {
 fputc(ch, fp);
 ch = getchar( );
 }

 printf("파일 입력이 종료되었습니다.\n");
 return 0;
 }

해당 파일을 윈도우에서 열어봤더니 파일 내용이 프로그램의 실행대로 나왔어!
파일을 종료할때는 q를 입력하니 종료되고 이런식으로 입력할 수 있구나!
그리고 종료조건으로 q가 아니고 다른문자를 넣어도 돼 q가 필수가 아니야.

좀 더 깊게 들어가서 행 단위로 데이터를 읽거나 쓰려면 무슨 함수써야할까?
fgets(), fputs() 함수가 있지
fgets() 함수는 파일에서 한 행을 읽어와서 문자열 배열에 저장하고, fputs() 함수는 문자열 배열의 내용을 파일에 한행으로 기록하지.
한 행의 기준이 뭐야 그러면?
한 행이란 키보드의 엔터나 \n를 만나기 전까지를 기준이야
fgets(), fputs(),fgetc(),fputc()함수 모두 텍스트 파일이네 그러면?
맞아, 텍스트 파일에 사용되는 함수로 파일의 모든 내용을 문자로 받아들이지 그러면 무엇일까?
읽고 쓰는 내용의 자료형이 모두 char형이라는거네!!

#include <stdio.h>
#include <stdlib.h>
#define LINE 30

int main(void)
{
 FILE* fp1, *fp2;
 char line[LINE];

 fp1 = fopen("lineInput.txt", "r");

 if(fp1 = = NULL)
 { 
printf("파일을 열 수 없습니다.\n");
 exit(1);
 }

 fp2 = fopen("linetarget.txt", "w");

 while(fgets(line, LINE, fp1) != NULL)
 fputs(line, fp2);

fclose(fp1);같으
fclose(fp2);

return 0;
}

lineInput.txt 파일에 있는 내용을 그대로 읽어서 배열에 저장하고, 저장된 내용을 linetarget.txt 파일에 기록 되는구나
결론은 읽어야 하는 파일 기록되 파일 모두 같은 글자가 나타나네!!
주의할 점도 있어 lineInput.txt 파일이 먼저 존재해야 에러 메세지가 안떠
그래서 우리는 메모장에 먼저 값을 주고 프로젝트 디렉터리에 lineInput.txt 저장후 코딩해야하는거지!
그러면 자동으로 linetarget.txt 파일이 완성되는거지
